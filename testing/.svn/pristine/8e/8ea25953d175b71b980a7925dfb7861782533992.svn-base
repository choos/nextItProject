package com.zero.QNA.service;

import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.zero.QNA.dao.IQNADao;
import com.zero.QNA.vo.QANVO;
import com.zero.common.exception.BizDuplicateException;
import com.zero.common.exception.BizException;
import com.zero.common.exception.BizRegistFailException;

@Service
public class QNAServiceImpl implements IQNAService {

	@Autowired
	IQNADao anqdao;
	
	//QAN 리스트
	@Override
	public List<QANVO> getQNAList() throws BizException {
		try {
			return anqdao.getQNAList();
		} catch (SQLException e) {
			throw new BizException("",e);
		}	
	}
	//카테고리 조회
	@Override
	public List<QANVO> getQNACategory(String qCategory) throws BizException {
		try {
			return anqdao.getQNACategory(qCategory);
		} catch (SQLException e) {
			throw new BizException("",e);
		}	
	}
	
	//뷰 조회
	@Override
	public QANVO getQNAView(int qNum) throws BizException {
		try {
			return anqdao.getQNAView(qNum);
		} catch (SQLException e) {
			throw new BizException("",e);
		}
	}

	
	//QAN작성
	@Override
	public void insertQNARegist(QANVO qanVO) throws BizException {
		try {
			int res = anqdao.insertQNARegist(qanVO);
			if(res <1) {
				throw new BizRegistFailException();
			}
		} catch (SQLException e) {
			if(e.getErrorCode()==1) {
				throw new BizDuplicateException(e);
			}
			throw new BizException("", e);
		}
	}
	
	//QAN수정
	@Override
	public void updateQNA(QANVO qanVO) throws BizException {
		try {
			int res = anqdao.updateQNA(qanVO);
			if(res <1) {
				throw new BizRegistFailException();
			}
		} catch (SQLException e) {
			if(e.getErrorCode()==1) {//1이면 pk오류
				throw new BizDuplicateException(e);
			}
			throw new BizException("", e);
		}
	}
	
	//QAN삭제
	@Override
	public void deleteQNA(int qNum) throws BizException {
		try {
			int res = anqdao.deleteQNA(qNum);
			if(res <1) {
				throw new BizRegistFailException();
			}
		} catch (SQLException e) {
			if(e.getErrorCode()==1) {
				throw new BizDuplicateException(e);
			}
			throw new BizException("", e);
		}
	}
	



}
